@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.18
 * Note: only for mobile
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif;
}

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
  margin: 0;
  padding: 0;
}

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
  line-height: inherit;
  font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
  font-size: inherit;
}

address,
cite,
dfn,
em,
i,
optgroup,
var {
  font-style: normal;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left;
}

ul,
ol,
menu {
  list-style: none;
}

fieldset,
img {
  border: 0;
  vertical-align: middle;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "\0020";
}

textarea,
pre,
xmp {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

textarea {
  resize: vertical;
}

input,
textarea,
button,
select
a {
  outline: 0 none;
}

input,
textarea,
button,
select {
  color: inherit;
}
input:disabled,
textarea:disabled,
button:disabled,
select:disabled {
  opacity: 1;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

mark {
  background-color: transparent;
}

a,
ins,
s,
u,
del {
  text-decoration: none;
}

a,
img {
  -webkit-touch-callout: none;
}

a {
  color: #00afc7;
}

.g-clear::after,
.g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020";
}

@font-face {
  font-family: fontawesome-webfont;
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.eot);
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.eot?#iefix) format("embedded-opentype"), url(http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.woff) format("woff"), url(http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.ttf) format("truetype"), url(http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.svg#iconfont) format("svg");
}
.yo-ico {
  font-family: fontawesome-webfont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: .1px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Layout: yo-stacked
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.15
 -----------------------
 * @method stacked
 * variables length(2)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $margin 定义外边距
 */
.yo-stacked {
  display: block;
  margin: 0.2rem 0.1rem;
}
.yo-stacked::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020";
}

/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px;
}
.m-code .method {
  color: #93de08;
}
.m-code .bracket,
.m-code .colon {
  padding-right: 5px;
  color: #fff;
}
.m-code mark {
  background: none;
  color: #ccc;
  font-size: 16px;
}

/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
@media screen and (min-width: 800px) {
  .m-demo {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    margin: .1rem;
  }
}
.m-demo .device .stage {
  position: relative;
  height: 5.68rem;
}
@media screen and (min-width: 800px) {
  .m-demo .device {
    position: relative;
    width: 3.66rem;
    height: 7.83rem;
    border: .05rem solid #505559;
    border-radius: .55rem;
    background-color: #313538;
  }
  .m-demo .device::before, .m-demo .device::after {
    position: absolute;
    left: 50%;
    -webkit-transform: translate(-50%);
    -moz-transform: translate(-50%);
    transform: translate(-50%);
    content: "\0020";
  }
  .m-demo .device::before {
    top: .58rem;
    width: .68rem;
    height: .08rem;
    border-radius: 4px;
    background-color: #3e4243;
  }
  .m-demo .device::after {
    bottom: .18rem;
    width: 0.65rem;
    height: 0.65rem;
    border: .05rem solid #3e4243;
    border-radius: 50%;
  }
  .m-demo .device .stage {
    top: .99rem;
    left: .18rem;
    width: 3.20rem;
    background-color: #fff;
  }
  .m-demo .device .stage, .m-demo .device .stage::before {
    position: absolute;
  }
  .m-demo .device .stage::before {
    top: -.68rem;
    left: 50%;
    -webkit-transform: translate(-50%);
    -moz-transform: translate(-50%);
    transform: translate(-50%);
    width: 0.1rem;
    height: 0.1rem;
    border-radius: 50%;
    background-color: #3e4243;
    box-shadow: -.5rem .26rem #3e4243;
    content: "\0020";
  }
}
.m-demo .code {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  -webkit-user-select: text;
  -moz-user-select: text;
  user-select: text;
  margin: .1rem 0;
  border-width: .04rem 0 .04rem 0;
  border-style: solid;
  border-color: #D7DBE4;
  padding: .1rem;
  background-color: #F0F3F8;
}
@media screen and (min-width: 800px) {
  .m-demo .code {
    margin: .1rem;
    border-width: 0 0 0 .04rem;
  }
}
.m-demo .code h3 {
  margin-top: .1rem;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-header
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-header
 * variables length(9)
 * @param {default | String} $name 定义yo-header名称
 * @param {default | Length} $height 定义yo-header高度
 * @param {default | Length} $item-width 定义yo-header两侧子项宽度
 * @param {default | Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {default | Color} $bgcolor 定义yo-header背景色
 * @param {default | Color} $bordercolor 定义yo-header边框色
 * @param {default | Color} $color 定义yo-header文本色
 * @param {default | Length} $font-size 定义yo-header文本大小
 * @param {default | Length} $item-font-size 定义yo-header两侧的子项文本大小
 */
.yo-header {
  position: relative;
  overflow: hidden;
  height: 0.44rem;
  line-height: 0.44rem;
  border-bottom: 1px solid #dddddd;
  background-color: white;
  font-size: 0.16rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
}
.yo-header > .title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  margin: 0 0.6rem;
}
.yo-header > .regret,
.yo-header > .affirm {
  position: absolute;
  top: 0;
  width: 0.6rem;
  font-size: 0.14rem;
  color: #00afc7;
  cursor: pointer;
}
.yo-header > .regret:active,
.yo-header > .affirm:active {
  opacity: .5;
}
.yo-header > .regret {
  left: 0;
  padding-left: 0.15rem;
  text-align: left;
}
.yo-header > .affirm {
  right: 0;
  padding-right: 0.15rem;
  text-align: right;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Fragment: yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-list
 * variables length(10)
 * @param {default|String} $name 定义list名称
 * @param {default|Length} $margin 定义list外边距
 * @param {default|Boole} $is-outline 定义list是否需要轮廓（即外边框）
 * @param {default|Length} $radius 定义list圆角
 * @param {default|Color} $bordercolor 定义list边框色
 * @param {default|Length} $item-padding 定义list项的内补白
 * @param {default|Length} $label-padding 定义list分组标题内补白
 * @param {default|Color} $label-bgcolor 定义list分组标题背景色
 * @param {default|Color} $active-bgcolor 定义list点击反馈背景色
 * @param {default|Color} $on-bgcolor 定义list选中背景色
 */
.yo-list {
  overflow: hidden;
  background-color: #fff;
  color: #dddddd;
}
.yo-list > .label,
.yo-list > .item {
  border-bottom: 0.01rem solid #dddddd;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
}
.yo-list > .label > .mark:not(:last-child),
.yo-list > .label > .yo-ico:not(:last-child),
.yo-list > .item > .mark:not(:last-child),
.yo-list > .item > .yo-ico:not(:last-child) {
  margin-right: .1rem;
}
.yo-list > .label > .flex,
.yo-list > .item > .flex {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
}
.yo-list > .label > .mark,
.yo-list > .label > .yo-ico,
.yo-list > .label > .col,
.yo-list > .label > .flex,
.yo-list > .item > .mark,
.yo-list > .item > .yo-ico,
.yo-list > .item > .col,
.yo-list > .item > .flex {
  display: block;
}
.yo-list > .label.tr,
.yo-list > .item.tr {
  padding: 0;
}
.yo-list > .label {
  padding: 0.03rem 0.1rem;
  background-color: #fafafa;
  color: #9e9e9e;
}
.yo-list > .label > .col {
  padding: 0.03rem 0.1rem;
}
.yo-list > .item {
  padding: 0.11rem;
  color: #212121;
}
.yo-list > .item-stacked {
  display: block;
}
.yo-list > .item-stacked > .mark {
  padding-bottom: 5px;
}
.yo-list > .item-input > .yo-input {
  height: auto;
  padding: 0;
  border: 0;
}
.yo-list > .item-input, .yo-list > .item-active, .yo-list > .item-on, .yo-list > .item-light {
  cursor: pointer;
}
.yo-list > .item.item-active:active, .yo-list > .item.item-light {
  background-color: #f8f8f8;
}
.yo-list > .item > .col {
  padding: 0.11rem;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-index
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-index
 * variables length(4)
 * @param {default | String} $name 定义yo-index名称
 * @param {default | Length} $width 定义yo-index宽度
 * @param {default | Color} $color 定义yo-index文本色
 * @param {default | Length} $font-size 定义yo-index文本字号
 */
.yo-index {
  width: 0.3rem;
  text-transform: uppercase;
  color: #555555;
  font-size: 0.12rem;
  line-height: 1.1;
  text-align: center;
}
.yo-index .ellipsis {
  display: inline-block;
  width: 0.06rem;
  height: 0.06rem;
  border-radius: 50%;
  background-color: #555555;
}

/**
 * Widget: yo-group
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-group
 * variables length(2)
 * @param {default | String} $name 定义yo-group名称
 * @param {default | Length} $top 定义yo-group顶部偏移值
 */
.yo-group {
  position: absolute;
  top: 0.95rem;
  right: 0;
  bottom: 0;
  left: 0;
}
.yo-group > .sticky,
.yo-group > .scroll-index {
  position: absolute;
  top: 0;
  right: 0;
}
.yo-group > .sticky {
  left: 0;
  padding: 0.03rem 0.1rem;
  background-color: #fafafa;
  color: #9e9e9e;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-search
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-search
 * variables length(15)
 * @param {default | String} $name 定义yo-search名称
 * @param {default | Length} $height 定义yo-search高度
 * @param {default | Length} $font-size 定义yo-search文本大小
 * @param {default | Length} $op-padding 定义yo-search内补白
 * @param {default | Length} $radius 定义yo-search圆角
 * @param {default | Color} $bordercolor 定义yo-search边框色
 * @param {default | Color} $bgcolor 定义yo-search背景色
 * @param {default | Color} $color 定义yo-search文本色
 * @param {default | Color} $on-bordercolor 定义yo-search激活边框色
 * @param {default | Color} $on-bgcolor 定义yo-search激活背景色
 * @param {default | Color} $placeholder-color 定义yo-search占位背景色
 * @param {default | Color} $ico-color 定义yo-search 操作区ico颜色
 * @param {default | Color} $cancel-color 定义yo-search取消按钮颜色
 * @param {default | Color} $op-bgcolor 定义yo-search搜索区域背景色
 * @param {default | Color} $mask-bgcolor 定义yo-search遮罩背景色
 */
.yo-search {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
}
.yo-search > .operate {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  position: relative;
  overflow: hidden;
  z-index: 2501;
  font-size: 0.14rem;
  line-height: 0.3rem;
  padding: 0.1rem;
  border-bottom: 1px solid #dddddd;
  background-color: white;
}
.yo-search > .operate > .action,
.yo-search > .operate > .action > .label,
.yo-search > .operate > .cancel {
  -webkit-transition: all 0.2s ease-in;
  -moz-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
}
.yo-search > .operate > .action {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  transform: translatez(0);
  position: relative;
  height: 0.3rem;
}
.yo-search > .operate > .action > .input {
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  transform: translatez(0);
  width: 100%;
  height: 100%;
  padding: 0 .3rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 1px solid #dddddd;
  border-radius: 0.05rem;
  background-color: #dddddd;
  color: #212121;
  font-size: 0.14rem;
}
.yo-search > .operate > .action > .yo-ico-delete,
.yo-search > .operate > .action > .yo-ico-fresh,
.yo-search > .operate > .action > .yo-ico-stop {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  padding: 0 .08rem;
  color: #999999;
}
.yo-search > .operate > .action > .label {
  position: absolute;
  top: 0;
  left: 50%;
  -webkit-transform: translatex(-50%) translatez(0);
  -moz-transform: translatex(-50%) translatez(0);
  transform: translatex(-50%) translatez(0);
  color: white;
  word-spacing: -.05rem;
}
.yo-search > .operate > .action > .label > .yo-ico-search {
  vertical-align: top;
  margin: 0 .08rem 0 .1rem;
}
.yo-search > .operate > .cancel {
  display: block;
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  transform: translatez(0);
  overflow: hidden;
  width: 0;
  color: #00afc7;
  white-space: nowrap;
  text-align: right;
}
.yo-search > .operate-on > .action > .label {
  left: 0;
  -webkit-transform: translatex(0) translatez(0);
  -moz-transform: translatex(0) translatez(0);
  transform: translatex(0) translatez(0);
}
.yo-search > .operate-on > .action > .yo-ico-delete {
  display: inline-block;
}
.yo-search > .operate-on > .cancel {
  width: .6rem;
  padding-right: .1rem;
}
.yo-search > .operate-fresh > .action > .input, .yo-search > .operate-stop > .action > .input {
  text-align: center;
}
.yo-search > .operate-fresh > .action > .label, .yo-search > .operate-stop > .action > .label {
  display: none;
}
.yo-search > .operate-fresh > .action > .yo-ico-fresh {
  display: inline-block;
}
.yo-search > .operate-stop > .action > .yo-ico-stop {
  display: inline-block;
}
.yo-search > .cont {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  display: none;
  position: absolute;
  top: .95rem;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.9);
}
.yo-search > .cont > .recommend,
.yo-search > .cont > .result {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
}
.yo-search > .cont > .recommend > .yo-group,
.yo-search > .cont > .result > .yo-group {
  top: 0;
}
.yo-search > .cont-on {
  display: block;
}
.yo-search-modal {
  position: fixed;
  z-index: 2501;
  top: 0;
  right: 0;
  left: 0;
  height: 100%;
}
.yo-search-modal > .cont {
  position: relative;
  top: 0;
}

/**
 * search演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */
.yo-group > .scroll-index {
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  transform: translate(0, -50%);
}
