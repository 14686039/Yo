@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box; }

html {
  background-color: white;
  color: #333333;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  -ms-user-select: none;
  user-select: none; }

body {
  font-size: 16px; }

body, ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
  margin: 0;
  padding: 0; }

body, input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
  line-height: 1.5;
  font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

caption, th {
  text-align: inherit; }

ul, ol, menu {
  list-style: none; }

fieldset, img {
  border: 0 none; }

img, object, input, textarea, button, select {
  vertical-align: top; }

article, aside, footer, header, section, nav, figure, figcaption, hgroup, details, menu, main {
  display: block; }

audio, canvas, video {
  display: inline-block; }

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
  font-size: 100%; }

address, cite, dfn, em, i, optgroup, var {
  font-style: normal; }

blockquote:before, blockquote:after, q:before, q:after {
  content: "\0020"; }

textarea {
  overflow: auto; }

textarea, input, button {
  outline: none; }

button::-moz-focus-inner, input::-moz-focus-inner {
  padding: 0;
  border: 0 none; }

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  -o-appearance: none;
  -ms-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

ins, s, u, del {
  text-decoration: none; }

input, textarea, button, a {
  -webkit-tap-highlight-color: transparent; }

a, img {
  -webkit-touch-callout: none; }

a {
  color: #25a4bb;
  text-decoration: none; }
  a:hover {
    color: #ff6600; }

input[type="checkbox"],
input[type="radio"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -o-appearance: none;
  -ms-appearance: none;
  appearance: none;
  position: relative;
  overflow: hidden;
  width: 20px;
  height: 20px;
  margin: 0;
  cursor: pointer;
  vertical-align: middle;
  background: #fff;
  border: 1px solid #c7ced4;
  border-radius: 3px; }

input[type="radio"] {
  border-radius: 50%; }

input[type="checkbox"]:hover,
input[type="radio"]:hover {
  border-color: #c6c6c6;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1); }

input[type="checkbox"]:active,
input[type="radio"]:active {
  border-color: #c6c6c6;
  background: #ebebeb; }

input[type="checkbox"]:checked,
input[type="radio"]:checked {
  border-color: #02a8c9;
  background: #02a8c9; }

input[type="radio"]:checked::after {
  position: absolute;
  top: 4px;
  left: 4px;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #fff;
  content: "\0020"; }

input[type="checkbox"]:checked::before,
input[type="checkbox"]:checked::after {
  position: absolute;
  content: "\0020";
  border-radius: 2px; }

input[type="checkbox"]:checked::before {
  top: 8px;
  left: 4px;
  width: 3px;
  height: 8px;
  background: #fff;
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg); }

input[type="checkbox"]:checked::after {
  top: 2px;
  left: 10px;
  width: 3px;
  height: 15px;
  background: #fff;
  -webkit-transform: rotate(36deg);
  -moz-transform: rotate(36deg);
  -o-transform: rotate(36deg);
  -ms-transform: rotate(36deg);
  transform: rotate(36deg); }

input[type="checkbox"]:focus {
  outline: none;
  border-color: #02a8c9; }

input[type="checkbox"]:disabled,
input[type="radio"]:disabled {
  border-color: #dedfe0;
  background: #dedfe0; }

.g-clear::after, .g-mod::after, #bd::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

@font-face {
  font-family: "yofont";
  src: url("../../../../font/yofont.eot");
  src: url("../../../../font/yofont.eot?#iefix") format("embedded-opentype"), url("../../../../font/yofont.woff") format("woff"), url("../../../../font/yofont.ttf") format("truetype"), url("../../../../font/yofont.svg#iconfont") format("svg"); }
.g-ico {
  font-family: "yofont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
  line-height: 1; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Document Classes 约定文档级布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
* module: m-code
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px; }
  .m-code .method {
    color: #93de08; }
  .m-code .bracket,
  .m-code .colon {
    padding-right: 5px;
    color: #fff; }
  .m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * widget: ui-dialog
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method ui-dialog
 * variables length(10)
 * @param {default | String} $name 定义dialog名称
 * @param {default | Length} $width 定义dialog宽度
 * @param {default | Length} $height 定义dialog高度
 * @param {default | Length} $radius 定义dialog圆角
 * @param {default | Color} $bordercolor 定义dialog边框色
 * @param {default | Length} $hd-height 定义dialog头部高度
 * @param {default | Color} $hd-bgcolor 定义dialog头部背景色
 * @param {default | Color} $title-color 定义dialog标题文本色
 * @param {default | Length} $title-font-size 定义dialog标题字号
 * @param {default | Length} $bd-padding 定义dialog主体补白
 */
.ui-dialog {
  position: fixed;
  z-index: 1001;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  border-radius: 0.05rem;
  border: 1px solid #aaaaaa;
  min-width: 3rem;
  background: #fff; }
  .ui-dialog > .hd {
    border-radius: 0.05rem 0.05rem 0 0;
    height: 0.5rem;
    border-bottom: 1px solid #aaaaaa;
    background: #eeeeee;
    line-height: 0.5rem;
    text-align: center; }
    .ui-dialog > .hd .title {
      margin: 0 60px;
      font-size: 0.16rem; }
    .ui-dialog > .hd .regret,
    .ui-dialog > .hd .affirm {
      position: absolute;
      top: 0; }
    .ui-dialog > .hd .regret {
      left: .1rem; }
    .ui-dialog > .hd .affirm {
      right: .1rem; }
  .ui-dialog > .bd {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    max-height: 5rem;
    padding: 0.1rem; }
    .ui-dialog > .bd else {
      overflow: auto; }

/**
 * dialog演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */
.ui-dialog > .bd {
  font-size: .16rem; }
