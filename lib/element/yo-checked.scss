@charset "utf-8";
@import "classes";

/**
 * @class element
 */

/**
 * 构造单选多选的自定义使用方法，可同时作用于 checkbox 与 radio
 =======================
 * Variables: 9
 * Author: doyoe(杜瑶)
 * Edit: 2015.3.21
 -----------------------
 * @method yo-checked
 * @param {default | String} $name 为需要的扩展定义一个名称
 * @param {default | String} $type 选中时的标记类型，可选值：[circle | tick]
 * @param {default | Length} $size 元件大小
 * @param {default | Color} $bordercolor 边框色
 * @param {default | Color} $bgcolor 背景色
 * @param {default | Color} $on-bordercolor 选中时的边框色
 * @param {default | Color} $on-bgcolor 选中时的背景色
 * @param {default | Color} $on-color 选中时的标记色
 * @param {default | Length} $radius 圆角半径长度
 */

@mixin yo-checked(
    $name: default,
    $type: default,
    $size: default,
    $bordercolor: default,
    $bgcolor: default,
    $on-bordercolor: default,
    $on-bgcolor: default,
    $on-color: default,
    $radius: default) {
    // 区别是否新增实例还是修改本身
    @if $name == default {
        $name: "";
    } @else {
        $name: "-#{$name}";
    }
    // 如果值为default，则取config的定义
    @if $type == default {
        $type: map-get($checked, type);
    }
    @if $size == default {
        $size: map-get($checked, size);
    }
    @if $bordercolor == default {
        $bordercolor: map-get($checked, bordercolor);
    }
    @if $bgcolor == default {
        $bgcolor: map-get($checked, bgcolor);
    }
    @if $on-bordercolor == default {
        $on-bordercolor: map-get($checked, on-bordercolor);
    }
    @if $on-bgcolor == default {
        $on-bgcolor: map-get($checked, on-bgcolor);
    }
    @if $on-color == default {
        $on-color: map-get($checked, on-color);
    }
    @if $radius == default {
        $radius: map-get($checked, radius);
    }
    .yo-checked#{$name} {
        @if $size != map-get($checked, size) {
            @include square($size);
            font-size: $size;
        }
        @if $radius != map-get($checked, radius) {
            border-radius: $radius;
        }
        @if $bordercolor != map-get($checked, bordercolor) {
            border-color: $bordercolor;
        }
        @if $bgcolor != map-get($checked, bgcolor) {
            background-color: $bgcolor;
        }
        &::after{
            @if $type != map-get($checked, type) {
                @if $type == tick {
                    content: "✓";
                } @else {
                    content: "●";
                }
            }
        }
        &:checked {
            @if $on-bordercolor != map-get($checked, on-bordercolor) {
                border-color: $on-bordercolor;
            }
            @if $on-bgcolor != map-get($checked, on-bgcolor) {
                background-color: $on-bgcolor;
            }
            &::after {
                @if $on-color != map-get($checked, on-color) {
                    color: $on-color;
                }
            }
        }
    }
}

// 调用本文件时载入checked基础构造
.yo-checked {
    @include _checked;
}