@charset "utf-8";
@import "classes";

/**
 * Element: yo-dropdown
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method dropdown
 * variables length(4)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Length} $size 定义尺寸
 * @param {defailt | Color} $bordercolor 定义边框色
 * @param {defailt | Color} $bgcolor 定义背景色
 */

@mixin yo-dropdown(
	$name: default,
	$size: default,
	$bordercolor: default,
	$bgcolor: default){
	// 区别是否新增实例还是修改本身
	@if $name == default {
        $name: "";
    } @else {
        $name: "-#{$name}";
    }
	// 如果值为default，则取config的定义
	@if $size == default {
        $size: map-get($dropdown, size);
    }
    @if $bordercolor == default {
        $bordercolor: map-get($dropdown, bordercolor);
    }
    @if $bgcolor == default {
        $bgcolor: map-get($dropdown, bgcolor);
    }
	.yo-dropdown#{$name} {
		// 如果$size不等于config预设值时，则重设容器高度
		@if $size != map-get($dropdown, size) {
			min-height: $size + 20px;
		}
		&:before {
			// 如果$bgcolor不等于config预设值时，则重写遮罩背景色
			@if $bgcolor != map-get($dropdown, bgcolor) {
			    background-color: $bgcolor;
			}
		}
		&:after {
			// 如果$size不等于config预设值时，则重设尺寸
			@if $size != map-get($dropdown, size) {
				font-size: $size;
			}
			// 如果$bordercolor不等于config预设值时，则重设颜色
			@if $bordercolor != map-get($dropdown, bordercolor) {
			    color: $bordercolor;
			}
		}
	}
}

// 调用本文件时载入dropdown基础构造
.yo-dropdown {
	// @include _dropdown;
}