@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html {
  background-color: whitesmoke;
  color: #333333;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none; }

body {
  font-size: 16px; }

body, ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
  margin: 0;
  padding: 0; }

body, input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
  line-height: 1.5;
  font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

caption, th {
  text-align: inherit; }

ul, ol, menu {
  list-style: none; }

fieldset, img {
  border: 0 none; }

img, object, input, textarea, button, select {
  vertical-align: top; }

article, aside, footer, header, section, nav, figure, figcaption, hgroup, details, menu, main {
  display: block; }

audio, canvas, video {
  display: inline-block; }

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
  font-size: 100%; }

address, cite, dfn, em, i, optgroup, var {
  font-style: normal; }

blockquote:before, blockquote:after, q:before, q:after {
  content: "\0020"; }

textarea {
  overflow: auto; }

textarea, input, button {
  outline: none; }

button::-moz-focus-inner, input::-moz-focus-inner {
  padding: 0;
  border: 0 none; }

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

ins, s, u, del {
  text-decoration: none; }

input, textarea, button, a {
  -webkit-tap-highlight-color: transparent; }

a, img {
  -webkit-touch-callout: none; }

a {
  color: #25a4bb;
  text-decoration: none; }
  a:hover {
    color: #ff6600; }

.g-clear::after, .g-mod::after, #bd::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

@font-face {
  font-family: "fontawesome-webfont";
  src: url("http://source.qunarzz.com/fonts/fontawesome/4.1.0/fontawesome-webfont.eot");
  src: url("http://source.qunarzz.com/fonts/fontawesome/4.1.0/fontawesome-webfont.eot?#iefix") format("embedded-opentype"), url("http://source.qunarzz.com/fonts/fontawesome/4.1.0/fontawesome-webfont.woff") format("woff"), url("http://source.qunarzz.com/fonts/fontawesome/4.1.0/fontawesome-webfont.ttf") format("truetype"), url("http://source.qunarzz.com/fonts/fontawesome/4.1.0/fontawesome-webfont.svg#iconfont") format("svg"); }
.yo-ico {
  font-family: "fontawesome-webfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.1px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Document Classes 约定文档级布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
* module: m-code
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px; }
  .m-code .method {
    color: #93de08; }
  .m-code .bracket,
  .m-code .colon {
    padding-right: 5px;
    color: #fff; }
  .m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * widget: yo-popup
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method yo-popup
 * variables length(12)
 * @param {default | String} $name 定义popup名称
 * @param {default | Length} $width 定义popup宽度
 * @param {default | Length} $height 定义popup高度
 * @param {default | Length} $radius 定义popup圆角
 * @param {default | Color} $bordercolor 定义popup边框色
 * @param {default | Length} $hd-height 定义popup头部高度
 * @param {default | Color} $hd-bgcolor 定义popup头部背景色
 * @param {default | Color} $title-color 定义popup标题文本色
 * @param {default | Length} $title-font-size 定义popup标题字号
 * @param {default | Length} $bd-padding 定义popup主体补白
 * @param {default | Length} $arrow-size 定义popup箭头高度
 * @param {default | center | Length} $arrow-pos 定义popup箭头水平位置
 */
.yo-popup {
  position: absolute;
  z-index: 2001;
  min-width: 1.5rem;
  border-radius: 0.03rem;
  border: 1px solid #dddddd;
  background: #fff; }
  .yo-popup > .arrow::after {
    position: absolute;
    content: "◆";
    color: #fff;
    font-size: 0.24rem;
    line-height: 1; }
  .yo-popup-extra.yo-popup-top > .arrow::after {
    color: #eeeeee; }

  .yo-popup-top > .arrow::after,
  .yo-popup-down > .arrow::after {
    -webkit-transform: translate(-50%);
    -moz-transform: translate(-50%);
    transform: translate(-50%);
    left: 50%; }

  .yo-popup-top > .arrow::after {
    top: -0.1rem;
    text-shadow: 0 -1px #dddddd; }

  .yo-popup-down > .arrow::after {
    bottom: -0.1rem;
    text-shadow: 0 1px #dddddd; }

  .yo-popup-right > .arrow::after,
  .yo-popup-left > .arrow::after {
    -webkit-transform: translate(0, -50%);
    -moz-transform: translate(0, -50%);
    transform: translate(0, -50%);
    top: 50%; }

  .yo-popup-right > .arrow::after {
    right: -0.1rem;
    text-shadow: 1px 0 #dddddd; }

  .yo-popup-left > .arrow::after {
    left: -0.1rem;
    text-shadow: -1px 0 #dddddd; }
  .yo-popup > .hd,
  .yo-popup > .bd {
    position: relative;
    z-index: 2; }
  .yo-popup > .hd {
    border-radius: 0.03rem 0.03rem 0 0;
    height: 0.5rem;
    border-bottom: 1px solid #dddddd;
    background: #eeeeee;
    line-height: 0.5rem;
    text-align: center; }
    .yo-popup > .hd .title {
      margin: 0 60px;
      font-size: 0.16rem; }
    .yo-popup > .hd .regret,
    .yo-popup > .hd .affirm {
      position: absolute;
      top: 0; }
    .yo-popup > .hd .regret {
      left: 10px; }
    .yo-popup > .hd .affirm {
      right: 10px; }
  .yo-popup > .bd {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    max-height: 500px;
    padding: 0.1rem; }

/**
 * popup演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */
.yo-popup {
  top: 20px;
  right: 20px; }
  .yo-popup > .bd {
    font-size: .16rem; }
  .yo-popup:nth-child(2) {
    right: 350px; }

.yo-popup {
  border-radius: 0.1rem;
  border-color: black;
  width: 3rem;
  height: 3rem; }
  .yo-popup > .arrow::after {
    font-size: 0.32rem; }
    .yo-popup-extra.yo-popup-top > .arrow::after {
      color: #009900; }

    .yo-popup-top > .arrow::after,
    .yo-popup-down > .arrow::after {
      left: 50%; }

    .yo-popup-top > .arrow::after {
      top: -0.14rem;
      text-shadow: 0 -1px black; }

    .yo-popup-down > .arrow::after {
      bottom: -0.14rem;
      text-shadow: 0 1px black; }

    .yo-popup-right > .arrow::after,
    .yo-popup-left > .arrow::after {
      top: 50%; }

    .yo-popup-right > .arrow::after {
      right: -0.14rem;
      text-shadow: 1px 0 black; }

    .yo-popup-left > .arrow::after {
      left: -0.14rem;
      text-shadow: -1px 0 black; }
  .yo-popup > .hd {
    border-radius: 0.1rem 0.1rem 0 0;
    height: 0.6rem;
    line-height: 0.6rem;
    border-bottom-color: black;
    background: #009900; }
    .yo-popup > .hd .title {
      color: white;
      font-size: 0.2rem; }
  .yo-popup > .bd {
    height: 100%;
    padding: 0.3rem; }
  .yo-popup-extra > .bd {
    height: 2.4rem; }
